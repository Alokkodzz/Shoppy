version: 2.1

executors:
  node_executor:
    docker:
      - image: node:18-alpine
  dotnet_executor_1:
    docker:
      - image: mcr.microsoft.com/dotnet/sdk:6.0
  dotnet_executor_2:
    docker:
      - image: mcr.microsoft.com/dotnet/sdk:6.0
  aws-cli-executor:
    docker:
      - image: amazon/aws-cli:2.15.14
    environment:
      AWS_REGION: "us-east-1"
  terraform_executor:
    docker:
      - image: hashicorp/terraform:1.5.7
    environment:
      AWS_REGION: "us-east-1"
  docker-executor:
    docker:
      - image: cimg/base:stable  # CircleCI convenience image
    working_directory: ~/shoppy/frontend
    environment:
      AWS_REGION: "us-east-1"
      AWS_ACCOUNT_ID: "690596055323"  # Your AWS account ID for ECR
  

jobs:
  nodejs-ci:
    executor: node_executor
    working_directory: ~/shoppy/frontend
    steps:
      - checkout:
          path: ~/shoppy
      - run:
          name: Install dependencies
          command: npm install 
      - run:
          name: Run Lint
          command: npm run lint
      - run:
          name: Build Vite App
          command: npm run build

  dotnet-ci-order-service:
    executor: dotnet_executor_1
    working_directory: ~/shoppy/order-service
    steps:
      - checkout:
          path: ~/shoppy
      - run:
          name: Restore Dependencies
          command: dotnet restore
      - run:
          name: Build Project
          command: dotnet build --no-restore
      - run:
          name: Run Tests
          command: dotnet test --no-build --verbosity normal

  dotnet-ci-product-service:
    executor: dotnet_executor_2
    working_directory: ~/shoppy/product-service
    steps:
      - checkout:
          path: ~/shoppy
      - run:
          path: ~/shoppy/product-service
          name: Restore Dependencies
          command: dotnet restore
      - run:
          name: Build Project
          command: dotnet build --no-restore
      - run:
          name: Run Tests
          command: dotnet test --no-build --verbosity normal

  terraform-ci:
     executor: terraform_executor
     working_directory: ~/shoppy/Infra
     steps:
        - checkout:
            path: ~/shoppy
        - run:
            name: Initialize Terraform
            #working_directory: ~/shoppy/infra
            command: | 
              terraform init
        - run:
            name: Validate Terraform Configuration
            #working_directory: ~/shoppy/infra
            command: |
              terraform validate
        - run:
            name: Plan Terraform Changes
            #working_directory: ~/shoppy/infra
            command: |
              terraform plan

  trigger-codebuild-orderservice:
    executor: aws-cli-executor
    steps:
      - checkout
      - run:
          name: Trigger AWS CodeBuild project
          command: |
            aws codebuild start-build --project-name OSA_Build

  trigger-codebuild-productservice:
    executor: aws-cli-executor
    steps:
      - checkout
      - run:
          name: Trigger AWS CodeBuild project
          command: |
            aws codebuild start-build --project-name PSA_Build

  build-and-push-frontend:
    executor: docker-executor
    working_directory: ~/shoppy/frontend
    steps:
      - checkout:
          path: ~/shoppy
      - run:
          name: Set Image Tag
          command: |
            IMAGE_TAG=$(cat ./VERSION)
            echo "export IMAGE_TAG=$IMAGE_TAG" >> $BASH_ENV
      - run:
          name: Install AWS CLI
          command: |
            sudo apt-get update
            sudo apt-get install -y awscli
      - run:
          name: Authenticate Docker to AWS ECR
          command: |
            aws --version
            aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com
      - run:
          name: Build Docker image
          command: |
            docker build -t frontend .
      - run:
          name: Tag Docker image
          command: |
            source $BASH_ENV
            docker tag frontend:latest $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/frontend:$IMAGE_TAG
      - run:
          name: Push Docker image to ECR
          command: |
            source $BASH_ENV
            docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/frontend:$IMAGE_TAG

workflows:
  version: 2
  build_and_test:
    jobs:
      - nodejs-ci
      - dotnet-ci-order-service:
          requires:
            - nodejs-ci
      - dotnet-ci-product-service:
          requires:
            - dotnet-ci-order-service
      - terraform-ci:
          requires:
            - dotnet-ci-product-service
      - trigger-codebuild-orderservice:
          requires:
            - terraform-ci
      - trigger-codebuild-productservice:
          requires:
            - terraform-ci
      - build-and-push-frontend:
          requires:
            - trigger-codebuild-productservice